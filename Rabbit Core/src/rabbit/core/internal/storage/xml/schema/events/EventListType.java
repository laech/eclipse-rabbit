/*
 * Copyright 2010 The Rabbit Eclipse Plug-in Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.03.28 at 02:51:39 PM NZDT 
//


package rabbit.core.internal.storage.xml.schema.events;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for eventListType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="eventListType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="commandEvents" type="{}commandEventListType" maxOccurs="unbounded"/>
 *         &lt;element name="partEvents" type="{}partEventListType" maxOccurs="unbounded"/>
 *         &lt;element name="fileEvents" type="{}fileEventListType" maxOccurs="unbounded"/>
 *         &lt;element name="perspectiveEvents" type="{}perspectiveEventListType" maxOccurs="unbounded"/>
 *         &lt;element name="taskEvents" type="{}taskEventListType" maxOccurs="unbounded"/>
 *         &lt;element name="launchEvents" type="{}launchEventListType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "eventListType", propOrder = {
    "commandEvents",
    "partEvents",
    "fileEvents",
    "perspectiveEvents",
    "taskEvents",
    "launchEvents"
})
public class EventListType {

    @XmlElement(required = true)
    protected List<CommandEventListType> commandEvents;
    @XmlElement(required = true)
    protected List<PartEventListType> partEvents;
    @XmlElement(required = true)
    protected List<FileEventListType> fileEvents;
    @XmlElement(required = true)
    protected List<PerspectiveEventListType> perspectiveEvents;
    @XmlElement(required = true)
    protected List<TaskEventListType> taskEvents;
    @XmlElement(required = true)
    protected List<LaunchEventListType> launchEvents;

    /**
     * Gets the value of the commandEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the commandEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCommandEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CommandEventListType }
     * 
     * 
     */
    public List<CommandEventListType> getCommandEvents() {
        if (commandEvents == null) {
            commandEvents = new ArrayList<CommandEventListType>();
        }
        return this.commandEvents;
    }

    /**
     * Gets the value of the partEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the partEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPartEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PartEventListType }
     * 
     * 
     */
    public List<PartEventListType> getPartEvents() {
        if (partEvents == null) {
            partEvents = new ArrayList<PartEventListType>();
        }
        return this.partEvents;
    }

    /**
     * Gets the value of the fileEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the fileEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFileEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FileEventListType }
     * 
     * 
     */
    public List<FileEventListType> getFileEvents() {
        if (fileEvents == null) {
            fileEvents = new ArrayList<FileEventListType>();
        }
        return this.fileEvents;
    }

    /**
     * Gets the value of the perspectiveEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the perspectiveEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPerspectiveEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PerspectiveEventListType }
     * 
     * 
     */
    public List<PerspectiveEventListType> getPerspectiveEvents() {
        if (perspectiveEvents == null) {
            perspectiveEvents = new ArrayList<PerspectiveEventListType>();
        }
        return this.perspectiveEvents;
    }

    /**
     * Gets the value of the taskEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the taskEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTaskEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TaskEventListType }
     * 
     * 
     */
    public List<TaskEventListType> getTaskEvents() {
        if (taskEvents == null) {
            taskEvents = new ArrayList<TaskEventListType>();
        }
        return this.taskEvents;
    }

    /**
     * Gets the value of the launchEvents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the launchEvents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLaunchEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LaunchEventListType }
     * 
     * 
     */
    public List<LaunchEventListType> getLaunchEvents() {
        if (launchEvents == null) {
            launchEvents = new ArrayList<LaunchEventListType>();
        }
        return this.launchEvents;
    }

}
